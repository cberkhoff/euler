public class Solution{

	private static class Step{
		final String currentN;
		final int max;
		public Step(String currentN, int max){
			this.currentN = currentN;
			this.max = max;
		}
	}

	public static final String N = "731671765313306249192251196744265747423553491949349698352031277450632623957831801698480186947885184385861560789112949495459501737958331952853208805511125406987471585238630507156932909632952274430435576689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749303589072962904915604407723907138105158593079608667017242712188399879790879227492190169972088809377665727333001053367881220235421809751254540594752245258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

	public static final int SIZE = 5;

	public static void main(String args[]){

		final Step r = calculate(new Step(removeZeroes(N, SIZE), -1), SIZE);
		System.out.println(r.max);
		//System.out.println(productOfLast("172381203146", 5));
	}

	public static String removeZeroes(String n, int x){
		return n;
	}

	public static Step calculate(Step s, int x){
		if(s.currentN.length()<x){
			return s;
		} else {
			final int p = productOfLast(s.currentN, x);
			return calculate(new Solution.Step(s.currentN.substring(0, s.currentN.length()-1), Math.max(s.max, p)), x);
		}
	}

	public static int productOfLast(String n, int x){
		int r = 1;
		for(int i = n.length()-1; i >= n.length()-x; i--){
			r *= Integer.parseInt(n.charAt(i)+"");
		}
		return r;
	}
}